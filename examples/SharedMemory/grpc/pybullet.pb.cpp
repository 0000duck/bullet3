// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pybullet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pybullet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pybullet_grpc {
class vec3DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<vec3> {
} _vec3_default_instance_;
class quat4DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<quat4> {
} _quat4_default_instance_;
class TerminateServerCommandDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TerminateServerCommand> {
} _TerminateServerCommand_default_instance_;
class StepSimulationCommandDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StepSimulationCommand> {
} _StepSimulationCommand_default_instance_;
class LoadUrdfCommandDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoadUrdfCommand> {
  public:
  ::google::protobuf::int32 usemultibody_;
  bool usefixedbase_;
  double globalscaling_;
} _LoadUrdfCommand_default_instance_;
class LoadUrdfStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoadUrdfStatus> {
} _LoadUrdfStatus_default_instance_;
class PyBulletCommandDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PyBulletCommand> {
  public:
  const ::pybullet_grpc::LoadUrdfCommand* loadurdfcommand_;
  const ::pybullet_grpc::TerminateServerCommand* terminateservercommand_;
  const ::pybullet_grpc::StepSimulationCommand* stepsimulationcommand_;
} _PyBulletCommand_default_instance_;
class PyBulletStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PyBulletStatus> {
  public:
  const ::pybullet_grpc::LoadUrdfStatus* urdfstatus_;
} _PyBulletStatus_default_instance_;

namespace protobuf_pybullet_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(vec3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quat4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quat4, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quat4, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quat4, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(quat4, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerminateServerCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TerminateServerCommand, exitreason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StepSimulationCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, urdffilename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, initialposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, initialorientation_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LoadUrdfCommand_default_instance_), usemultibody_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LoadUrdfCommand_default_instance_), usefixedbase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, urdfflags_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_LoadUrdfCommand_default_instance_), globalscaling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, hasUseMultiBody_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, hasUseFixedBase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfCommand, hasGlobalScaling_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadUrdfStatus, objectuniqueid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletCommand, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletCommand, commandtype_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PyBulletCommand_default_instance_), loadurdfcommand_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PyBulletCommand_default_instance_), terminateservercommand_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PyBulletCommand_default_instance_), stepsimulationcommand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletCommand, commands_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletStatus, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletStatus, statustype_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_PyBulletStatus_default_instance_), urdfstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PyBulletStatus, status_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(vec3)},
  { 7, -1, sizeof(quat4)},
  { 15, -1, sizeof(TerminateServerCommand)},
  { 20, -1, sizeof(StepSimulationCommand)},
  { 24, -1, sizeof(LoadUrdfCommand)},
  { 38, -1, sizeof(LoadUrdfStatus)},
  { 43, -1, sizeof(PyBulletCommand)},
  { 52, -1, sizeof(PyBulletStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_vec3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_quat4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TerminateServerCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StepSimulationCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoadUrdfCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoadUrdfStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PyBulletCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PyBulletStatus_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pybullet.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _vec3_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _quat4_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TerminateServerCommand_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _StepSimulationCommand_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LoadUrdfCommand_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LoadUrdfStatus_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _PyBulletCommand_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PyBulletStatus_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _vec3_default_instance_.DefaultConstruct();
  _quat4_default_instance_.DefaultConstruct();
  _TerminateServerCommand_default_instance_.DefaultConstruct();
  _StepSimulationCommand_default_instance_.DefaultConstruct();
  _LoadUrdfCommand_default_instance_.DefaultConstruct();
  _LoadUrdfStatus_default_instance_.DefaultConstruct();
  _PyBulletCommand_default_instance_.DefaultConstruct();
  _PyBulletStatus_default_instance_.DefaultConstruct();
  _LoadUrdfCommand_default_instance_.get_mutable()->initialposition_ = const_cast< ::pybullet_grpc::vec3*>(
      ::pybullet_grpc::vec3::internal_default_instance());
  _LoadUrdfCommand_default_instance_.get_mutable()->initialorientation_ = const_cast< ::pybullet_grpc::quat4*>(
      ::pybullet_grpc::quat4::internal_default_instance());
  _LoadUrdfCommand_default_instance_.usemultibody_ = 0;
  _LoadUrdfCommand_default_instance_.usefixedbase_ = false;
  _LoadUrdfCommand_default_instance_.globalscaling_ = 0;
  _PyBulletCommand_default_instance_.loadurdfcommand_ = const_cast< ::pybullet_grpc::LoadUrdfCommand*>(
      ::pybullet_grpc::LoadUrdfCommand::internal_default_instance());
  _PyBulletCommand_default_instance_.terminateservercommand_ = const_cast< ::pybullet_grpc::TerminateServerCommand*>(
      ::pybullet_grpc::TerminateServerCommand::internal_default_instance());
  _PyBulletCommand_default_instance_.stepsimulationcommand_ = const_cast< ::pybullet_grpc::StepSimulationCommand*>(
      ::pybullet_grpc::StepSimulationCommand::internal_default_instance());
  _PyBulletStatus_default_instance_.urdfstatus_ = const_cast< ::pybullet_grpc::LoadUrdfStatus*>(
      ::pybullet_grpc::LoadUrdfStatus::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016pybullet.proto\022\rpybullet_grpc\"\'\n\004vec3\022"
      "\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"3\n\005quat"
      "4\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\t\n\001w\030"
      "\004 \001(\001\",\n\026TerminateServerCommand\022\022\n\nexitR"
      "eason\030\001 \001(\t\"\027\n\025StepSimulationCommand\"\235\002\n"
      "\017LoadUrdfCommand\022\024\n\014urdfFileName\030\001 \001(\t\022,"
      "\n\017initialPosition\030\002 \001(\0132\023.pybullet_grpc."
      "vec3\0220\n\022initialOrientation\030\003 \001(\0132\024.pybul"
      "let_grpc.quat4\022\026\n\014useMultiBody\030\004 \001(\005H\000\022\026"
      "\n\014useFixedBase\030\005 \001(\010H\001\022\021\n\turdfFlags\030\006 \001("
      "\005\022\027\n\rglobalScaling\030\007 \001(\001H\002B\021\n\017hasUseMult"
      "iBodyB\021\n\017hasUseFixedBaseB\022\n\020hasGlobalSca"
      "ling\"(\n\016LoadUrdfStatus\022\026\n\016objectUniqueId"
      "\030\001 \001(\005\"\375\001\n\017PyBulletCommand\022\023\n\013commandTyp"
      "e\030\001 \001(\005\0229\n\017loadUrdfCommand\030\003 \001(\0132\036.pybul"
      "let_grpc.LoadUrdfCommandH\000\022G\n\026terminateS"
      "erverCommand\030\004 \001(\0132%.pybullet_grpc.Termi"
      "nateServerCommandH\000\022E\n\025stepSimulationCom"
      "mand\030\005 \001(\0132$.pybullet_grpc.StepSimulatio"
      "nCommandH\000B\n\n\010commands\"c\n\016PyBulletStatus"
      "\022\022\n\nstatusType\030\001 \001(\005\0223\n\nurdfStatus\030\002 \001(\013"
      "2\035.pybullet_grpc.LoadUrdfStatusH\000B\010\n\006sta"
      "tus2_\n\013PyBulletAPI\022P\n\rSubmitCommand\022\036.py"
      "bullet_grpc.PyBulletCommand\032\035.pybullet_g"
      "rpc.PyBulletStatus\"\000B.\n\025io.grpc.pybullet"
      "_grpcB\rPyBulletProtoP\001\242\002\003PBGb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1036);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pybullet.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pybullet_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int vec3::kXFieldNumber;
const int vec3::kYFieldNumber;
const int vec3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

vec3::vec3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.vec3)
}
vec3::vec3(const vec3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.vec3)
}

void vec3::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
  _cached_size_ = 0;
}

vec3::~vec3() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.vec3)
  SharedDtor();
}

void vec3::SharedDtor() {
}

void vec3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* vec3::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[0].descriptor;
}

const vec3& vec3::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

vec3* vec3::New(::google::protobuf::Arena* arena) const {
  vec3* n = new vec3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void vec3::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.vec3)
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

bool vec3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.vec3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (tag == 9u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.vec3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.vec3)
  return false;
#undef DO_
}

void vec3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.vec3)
  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.vec3)
}

::google::protobuf::uint8* vec3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.vec3)
  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.vec3)
  return target;
}

size_t vec3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.vec3)
  size_t total_size = 0;

  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void vec3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.vec3)
  GOOGLE_DCHECK_NE(&from, this);
  const vec3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const vec3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.vec3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.vec3)
    MergeFrom(*source);
  }
}

void vec3::MergeFrom(const vec3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.vec3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void vec3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void vec3::CopyFrom(const vec3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.vec3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool vec3::IsInitialized() const {
  return true;
}

void vec3::Swap(vec3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void vec3::InternalSwap(vec3* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata vec3::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// vec3

// double x = 1;
void vec3::clear_x() {
  x_ = 0;
}
double vec3::x() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.vec3.x)
  return x_;
}
void vec3::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.vec3.x)
}

// double y = 2;
void vec3::clear_y() {
  y_ = 0;
}
double vec3::y() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.vec3.y)
  return y_;
}
void vec3::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.vec3.y)
}

// double z = 3;
void vec3::clear_z() {
  z_ = 0;
}
double vec3::z() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.vec3.z)
  return z_;
}
void vec3::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.vec3.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int quat4::kXFieldNumber;
const int quat4::kYFieldNumber;
const int quat4::kZFieldNumber;
const int quat4::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

quat4::quat4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.quat4)
}
quat4::quat4(const quat4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.quat4)
}

void quat4::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_) + sizeof(w_));
  _cached_size_ = 0;
}

quat4::~quat4() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.quat4)
  SharedDtor();
}

void quat4::SharedDtor() {
}

void quat4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* quat4::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[1].descriptor;
}

const quat4& quat4::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

quat4* quat4::New(::google::protobuf::Arena* arena) const {
  quat4* n = new quat4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void quat4::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.quat4)
  ::memset(&x_, 0, reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_) + sizeof(w_));
}

bool quat4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.quat4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (tag == 9u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double w = 4;
      case 4: {
        if (tag == 33u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.quat4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.quat4)
  return false;
#undef DO_
}

void quat4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.quat4)
  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // double w = 4;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->w(), output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.quat4)
}

::google::protobuf::uint8* quat4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.quat4)
  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // double w = 4;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->w(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.quat4)
  return target;
}

size_t quat4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.quat4)
  size_t total_size = 0;

  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  // double w = 4;
  if (this->w() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void quat4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.quat4)
  GOOGLE_DCHECK_NE(&from, this);
  const quat4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const quat4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.quat4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.quat4)
    MergeFrom(*source);
  }
}

void quat4::MergeFrom(const quat4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.quat4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
}

void quat4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.quat4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void quat4::CopyFrom(const quat4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.quat4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool quat4::IsInitialized() const {
  return true;
}

void quat4::Swap(quat4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void quat4::InternalSwap(quat4* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(w_, other->w_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata quat4::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// quat4

// double x = 1;
void quat4::clear_x() {
  x_ = 0;
}
double quat4::x() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.quat4.x)
  return x_;
}
void quat4::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.quat4.x)
}

// double y = 2;
void quat4::clear_y() {
  y_ = 0;
}
double quat4::y() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.quat4.y)
  return y_;
}
void quat4::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.quat4.y)
}

// double z = 3;
void quat4::clear_z() {
  z_ = 0;
}
double quat4::z() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.quat4.z)
  return z_;
}
void quat4::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.quat4.z)
}

// double w = 4;
void quat4::clear_w() {
  w_ = 0;
}
double quat4::w() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.quat4.w)
  return w_;
}
void quat4::set_w(double value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.quat4.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TerminateServerCommand::kExitReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TerminateServerCommand::TerminateServerCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.TerminateServerCommand)
}
TerminateServerCommand::TerminateServerCommand(const TerminateServerCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  exitreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exitreason().size() > 0) {
    exitreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exitreason_);
  }
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.TerminateServerCommand)
}

void TerminateServerCommand::SharedCtor() {
  exitreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TerminateServerCommand::~TerminateServerCommand() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.TerminateServerCommand)
  SharedDtor();
}

void TerminateServerCommand::SharedDtor() {
  exitreason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TerminateServerCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TerminateServerCommand::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[2].descriptor;
}

const TerminateServerCommand& TerminateServerCommand::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

TerminateServerCommand* TerminateServerCommand::New(::google::protobuf::Arena* arena) const {
  TerminateServerCommand* n = new TerminateServerCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TerminateServerCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.TerminateServerCommand)
  exitreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TerminateServerCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.TerminateServerCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string exitReason = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exitreason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exitreason().data(), this->exitreason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pybullet_grpc.TerminateServerCommand.exitReason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.TerminateServerCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.TerminateServerCommand)
  return false;
#undef DO_
}

void TerminateServerCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.TerminateServerCommand)
  // string exitReason = 1;
  if (this->exitreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exitreason().data(), this->exitreason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pybullet_grpc.TerminateServerCommand.exitReason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exitreason(), output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.TerminateServerCommand)
}

::google::protobuf::uint8* TerminateServerCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.TerminateServerCommand)
  // string exitReason = 1;
  if (this->exitreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exitreason().data(), this->exitreason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pybullet_grpc.TerminateServerCommand.exitReason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exitreason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.TerminateServerCommand)
  return target;
}

size_t TerminateServerCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.TerminateServerCommand)
  size_t total_size = 0;

  // string exitReason = 1;
  if (this->exitreason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exitreason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TerminateServerCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.TerminateServerCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const TerminateServerCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TerminateServerCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.TerminateServerCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.TerminateServerCommand)
    MergeFrom(*source);
  }
}

void TerminateServerCommand::MergeFrom(const TerminateServerCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.TerminateServerCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.exitreason().size() > 0) {

    exitreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exitreason_);
  }
}

void TerminateServerCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.TerminateServerCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TerminateServerCommand::CopyFrom(const TerminateServerCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.TerminateServerCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TerminateServerCommand::IsInitialized() const {
  return true;
}

void TerminateServerCommand::Swap(TerminateServerCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TerminateServerCommand::InternalSwap(TerminateServerCommand* other) {
  exitreason_.Swap(&other->exitreason_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TerminateServerCommand::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TerminateServerCommand

// string exitReason = 1;
void TerminateServerCommand::clear_exitreason() {
  exitreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TerminateServerCommand::exitreason() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.TerminateServerCommand.exitReason)
  return exitreason_.GetNoArena();
}
void TerminateServerCommand::set_exitreason(const ::std::string& value) {
  
  exitreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pybullet_grpc.TerminateServerCommand.exitReason)
}
#if LANG_CXX11
void TerminateServerCommand::set_exitreason(::std::string&& value) {
  
  exitreason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pybullet_grpc.TerminateServerCommand.exitReason)
}
#endif
void TerminateServerCommand::set_exitreason(const char* value) {
  
  exitreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pybullet_grpc.TerminateServerCommand.exitReason)
}
void TerminateServerCommand::set_exitreason(const char* value, size_t size) {
  
  exitreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pybullet_grpc.TerminateServerCommand.exitReason)
}
::std::string* TerminateServerCommand::mutable_exitreason() {
  
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.TerminateServerCommand.exitReason)
  return exitreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TerminateServerCommand::release_exitreason() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.TerminateServerCommand.exitReason)
  
  return exitreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TerminateServerCommand::set_allocated_exitreason(::std::string* exitreason) {
  if (exitreason != NULL) {
    
  } else {
    
  }
  exitreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exitreason);
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.TerminateServerCommand.exitReason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StepSimulationCommand::StepSimulationCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.StepSimulationCommand)
}
StepSimulationCommand::StepSimulationCommand(const StepSimulationCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.StepSimulationCommand)
}

void StepSimulationCommand::SharedCtor() {
  _cached_size_ = 0;
}

StepSimulationCommand::~StepSimulationCommand() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.StepSimulationCommand)
  SharedDtor();
}

void StepSimulationCommand::SharedDtor() {
}

void StepSimulationCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StepSimulationCommand::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[3].descriptor;
}

const StepSimulationCommand& StepSimulationCommand::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

StepSimulationCommand* StepSimulationCommand::New(::google::protobuf::Arena* arena) const {
  StepSimulationCommand* n = new StepSimulationCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StepSimulationCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.StepSimulationCommand)
}

bool StepSimulationCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.StepSimulationCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.StepSimulationCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.StepSimulationCommand)
  return false;
#undef DO_
}

void StepSimulationCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.StepSimulationCommand)
  // @@protoc_insertion_point(serialize_end:pybullet_grpc.StepSimulationCommand)
}

::google::protobuf::uint8* StepSimulationCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.StepSimulationCommand)
  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.StepSimulationCommand)
  return target;
}

size_t StepSimulationCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.StepSimulationCommand)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StepSimulationCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.StepSimulationCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const StepSimulationCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StepSimulationCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.StepSimulationCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.StepSimulationCommand)
    MergeFrom(*source);
  }
}

void StepSimulationCommand::MergeFrom(const StepSimulationCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.StepSimulationCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void StepSimulationCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.StepSimulationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StepSimulationCommand::CopyFrom(const StepSimulationCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.StepSimulationCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StepSimulationCommand::IsInitialized() const {
  return true;
}

void StepSimulationCommand::Swap(StepSimulationCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StepSimulationCommand::InternalSwap(StepSimulationCommand* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StepSimulationCommand::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StepSimulationCommand

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadUrdfCommand::kUrdfFileNameFieldNumber;
const int LoadUrdfCommand::kInitialPositionFieldNumber;
const int LoadUrdfCommand::kInitialOrientationFieldNumber;
const int LoadUrdfCommand::kUseMultiBodyFieldNumber;
const int LoadUrdfCommand::kUseFixedBaseFieldNumber;
const int LoadUrdfCommand::kUrdfFlagsFieldNumber;
const int LoadUrdfCommand::kGlobalScalingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadUrdfCommand::LoadUrdfCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.LoadUrdfCommand)
}
LoadUrdfCommand::LoadUrdfCommand(const LoadUrdfCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  urdffilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.urdffilename().size() > 0) {
    urdffilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urdffilename_);
  }
  if (from.has_initialposition()) {
    initialposition_ = new ::pybullet_grpc::vec3(*from.initialposition_);
  } else {
    initialposition_ = NULL;
  }
  if (from.has_initialorientation()) {
    initialorientation_ = new ::pybullet_grpc::quat4(*from.initialorientation_);
  } else {
    initialorientation_ = NULL;
  }
  urdfflags_ = from.urdfflags_;
  clear_has_hasUseMultiBody();
  switch (from.hasUseMultiBody_case()) {
    case kUseMultiBody: {
      set_usemultibody(from.usemultibody());
      break;
    }
    case HASUSEMULTIBODY_NOT_SET: {
      break;
    }
  }
  clear_has_hasUseFixedBase();
  switch (from.hasUseFixedBase_case()) {
    case kUseFixedBase: {
      set_usefixedbase(from.usefixedbase());
      break;
    }
    case HASUSEFIXEDBASE_NOT_SET: {
      break;
    }
  }
  clear_has_hasGlobalScaling();
  switch (from.hasGlobalScaling_case()) {
    case kGlobalScaling: {
      set_globalscaling(from.globalscaling());
      break;
    }
    case HASGLOBALSCALING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.LoadUrdfCommand)
}

void LoadUrdfCommand::SharedCtor() {
  urdffilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&initialposition_, 0, reinterpret_cast<char*>(&urdfflags_) -
    reinterpret_cast<char*>(&initialposition_) + sizeof(urdfflags_));
  clear_has_hasUseMultiBody();
  clear_has_hasUseFixedBase();
  clear_has_hasGlobalScaling();
  _cached_size_ = 0;
}

LoadUrdfCommand::~LoadUrdfCommand() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.LoadUrdfCommand)
  SharedDtor();
}

void LoadUrdfCommand::SharedDtor() {
  urdffilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete initialposition_;
  }
  if (this != internal_default_instance()) {
    delete initialorientation_;
  }
  if (has_hasUseMultiBody()) {
    clear_hasUseMultiBody();
  }
  if (has_hasUseFixedBase()) {
    clear_hasUseFixedBase();
  }
  if (has_hasGlobalScaling()) {
    clear_hasGlobalScaling();
  }
}

void LoadUrdfCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadUrdfCommand::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[4].descriptor;
}

const LoadUrdfCommand& LoadUrdfCommand::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoadUrdfCommand* LoadUrdfCommand::New(::google::protobuf::Arena* arena) const {
  LoadUrdfCommand* n = new LoadUrdfCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadUrdfCommand::clear_hasUseMultiBody() {
// @@protoc_insertion_point(one_of_clear_start:pybullet_grpc.LoadUrdfCommand)
  switch (hasUseMultiBody_case()) {
    case kUseMultiBody: {
      // No need to clear
      break;
    }
    case HASUSEMULTIBODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = HASUSEMULTIBODY_NOT_SET;
}

void LoadUrdfCommand::clear_hasUseFixedBase() {
// @@protoc_insertion_point(one_of_clear_start:pybullet_grpc.LoadUrdfCommand)
  switch (hasUseFixedBase_case()) {
    case kUseFixedBase: {
      // No need to clear
      break;
    }
    case HASUSEFIXEDBASE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = HASUSEFIXEDBASE_NOT_SET;
}

void LoadUrdfCommand::clear_hasGlobalScaling() {
// @@protoc_insertion_point(one_of_clear_start:pybullet_grpc.LoadUrdfCommand)
  switch (hasGlobalScaling_case()) {
    case kGlobalScaling: {
      // No need to clear
      break;
    }
    case HASGLOBALSCALING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[2] = HASGLOBALSCALING_NOT_SET;
}


void LoadUrdfCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.LoadUrdfCommand)
  urdffilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && initialposition_ != NULL) {
    delete initialposition_;
  }
  initialposition_ = NULL;
  if (GetArenaNoVirtual() == NULL && initialorientation_ != NULL) {
    delete initialorientation_;
  }
  initialorientation_ = NULL;
  urdfflags_ = 0;
  clear_hasUseMultiBody();
  clear_hasUseFixedBase();
  clear_hasGlobalScaling();
}

bool LoadUrdfCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.LoadUrdfCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string urdfFileName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_urdffilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->urdffilename().data(), this->urdffilename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pybullet_grpc.LoadUrdfCommand.urdfFileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pybullet_grpc.vec3 initialPosition = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initialposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pybullet_grpc.quat4 initialOrientation = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initialorientation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 useMultiBody = 4;
      case 4: {
        if (tag == 32u) {
          clear_hasUseMultiBody();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hasUseMultiBody_.usemultibody_)));
          set_has_usemultibody();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool useFixedBase = 5;
      case 5: {
        if (tag == 40u) {
          clear_hasUseFixedBase();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasUseFixedBase_.usefixedbase_)));
          set_has_usefixedbase();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 urdfFlags = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &urdfflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double globalScaling = 7;
      case 7: {
        if (tag == 57u) {
          clear_hasGlobalScaling();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hasGlobalScaling_.globalscaling_)));
          set_has_globalscaling();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.LoadUrdfCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.LoadUrdfCommand)
  return false;
#undef DO_
}

void LoadUrdfCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.LoadUrdfCommand)
  // string urdfFileName = 1;
  if (this->urdffilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->urdffilename().data(), this->urdffilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pybullet_grpc.LoadUrdfCommand.urdfFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->urdffilename(), output);
  }

  // .pybullet_grpc.vec3 initialPosition = 2;
  if (this->has_initialposition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->initialposition_, output);
  }

  // .pybullet_grpc.quat4 initialOrientation = 3;
  if (this->has_initialorientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->initialorientation_, output);
  }

  // int32 useMultiBody = 4;
  if (has_usemultibody()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->usemultibody(), output);
  }

  // bool useFixedBase = 5;
  if (has_usefixedbase()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->usefixedbase(), output);
  }

  // int32 urdfFlags = 6;
  if (this->urdfflags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->urdfflags(), output);
  }

  // double globalScaling = 7;
  if (has_globalscaling()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->globalscaling(), output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.LoadUrdfCommand)
}

::google::protobuf::uint8* LoadUrdfCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.LoadUrdfCommand)
  // string urdfFileName = 1;
  if (this->urdffilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->urdffilename().data(), this->urdffilename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pybullet_grpc.LoadUrdfCommand.urdfFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->urdffilename(), target);
  }

  // .pybullet_grpc.vec3 initialPosition = 2;
  if (this->has_initialposition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->initialposition_, false, target);
  }

  // .pybullet_grpc.quat4 initialOrientation = 3;
  if (this->has_initialorientation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->initialorientation_, false, target);
  }

  // int32 useMultiBody = 4;
  if (has_usemultibody()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->usemultibody(), target);
  }

  // bool useFixedBase = 5;
  if (has_usefixedbase()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->usefixedbase(), target);
  }

  // int32 urdfFlags = 6;
  if (this->urdfflags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->urdfflags(), target);
  }

  // double globalScaling = 7;
  if (has_globalscaling()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->globalscaling(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.LoadUrdfCommand)
  return target;
}

size_t LoadUrdfCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.LoadUrdfCommand)
  size_t total_size = 0;

  // string urdfFileName = 1;
  if (this->urdffilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->urdffilename());
  }

  // .pybullet_grpc.vec3 initialPosition = 2;
  if (this->has_initialposition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->initialposition_);
  }

  // .pybullet_grpc.quat4 initialOrientation = 3;
  if (this->has_initialorientation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->initialorientation_);
  }

  // int32 urdfFlags = 6;
  if (this->urdfflags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->urdfflags());
  }

  switch (hasUseMultiBody_case()) {
    // int32 useMultiBody = 4;
    case kUseMultiBody: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->usemultibody());
      break;
    }
    case HASUSEMULTIBODY_NOT_SET: {
      break;
    }
  }
  switch (hasUseFixedBase_case()) {
    // bool useFixedBase = 5;
    case kUseFixedBase: {
      total_size += 1 + 1;
      break;
    }
    case HASUSEFIXEDBASE_NOT_SET: {
      break;
    }
  }
  switch (hasGlobalScaling_case()) {
    // double globalScaling = 7;
    case kGlobalScaling: {
      total_size += 1 + 8;
      break;
    }
    case HASGLOBALSCALING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadUrdfCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.LoadUrdfCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadUrdfCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadUrdfCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.LoadUrdfCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.LoadUrdfCommand)
    MergeFrom(*source);
  }
}

void LoadUrdfCommand::MergeFrom(const LoadUrdfCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.LoadUrdfCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.urdffilename().size() > 0) {

    urdffilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.urdffilename_);
  }
  if (from.has_initialposition()) {
    mutable_initialposition()->::pybullet_grpc::vec3::MergeFrom(from.initialposition());
  }
  if (from.has_initialorientation()) {
    mutable_initialorientation()->::pybullet_grpc::quat4::MergeFrom(from.initialorientation());
  }
  if (from.urdfflags() != 0) {
    set_urdfflags(from.urdfflags());
  }
  switch (from.hasUseMultiBody_case()) {
    case kUseMultiBody: {
      set_usemultibody(from.usemultibody());
      break;
    }
    case HASUSEMULTIBODY_NOT_SET: {
      break;
    }
  }
  switch (from.hasUseFixedBase_case()) {
    case kUseFixedBase: {
      set_usefixedbase(from.usefixedbase());
      break;
    }
    case HASUSEFIXEDBASE_NOT_SET: {
      break;
    }
  }
  switch (from.hasGlobalScaling_case()) {
    case kGlobalScaling: {
      set_globalscaling(from.globalscaling());
      break;
    }
    case HASGLOBALSCALING_NOT_SET: {
      break;
    }
  }
}

void LoadUrdfCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.LoadUrdfCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadUrdfCommand::CopyFrom(const LoadUrdfCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.LoadUrdfCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadUrdfCommand::IsInitialized() const {
  return true;
}

void LoadUrdfCommand::Swap(LoadUrdfCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadUrdfCommand::InternalSwap(LoadUrdfCommand* other) {
  urdffilename_.Swap(&other->urdffilename_);
  std::swap(initialposition_, other->initialposition_);
  std::swap(initialorientation_, other->initialorientation_);
  std::swap(urdfflags_, other->urdfflags_);
  std::swap(hasUseMultiBody_, other->hasUseMultiBody_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(hasUseFixedBase_, other->hasUseFixedBase_);
  std::swap(_oneof_case_[1], other->_oneof_case_[1]);
  std::swap(hasGlobalScaling_, other->hasGlobalScaling_);
  std::swap(_oneof_case_[2], other->_oneof_case_[2]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadUrdfCommand::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadUrdfCommand

// string urdfFileName = 1;
void LoadUrdfCommand::clear_urdffilename() {
  urdffilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoadUrdfCommand::urdffilename() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.urdfFileName)
  return urdffilename_.GetNoArena();
}
void LoadUrdfCommand::set_urdffilename(const ::std::string& value) {
  
  urdffilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pybullet_grpc.LoadUrdfCommand.urdfFileName)
}
#if LANG_CXX11
void LoadUrdfCommand::set_urdffilename(::std::string&& value) {
  
  urdffilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pybullet_grpc.LoadUrdfCommand.urdfFileName)
}
#endif
void LoadUrdfCommand::set_urdffilename(const char* value) {
  
  urdffilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pybullet_grpc.LoadUrdfCommand.urdfFileName)
}
void LoadUrdfCommand::set_urdffilename(const char* value, size_t size) {
  
  urdffilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pybullet_grpc.LoadUrdfCommand.urdfFileName)
}
::std::string* LoadUrdfCommand::mutable_urdffilename() {
  
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.LoadUrdfCommand.urdfFileName)
  return urdffilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoadUrdfCommand::release_urdffilename() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.LoadUrdfCommand.urdfFileName)
  
  return urdffilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoadUrdfCommand::set_allocated_urdffilename(::std::string* urdffilename) {
  if (urdffilename != NULL) {
    
  } else {
    
  }
  urdffilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), urdffilename);
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.LoadUrdfCommand.urdfFileName)
}

// .pybullet_grpc.vec3 initialPosition = 2;
bool LoadUrdfCommand::has_initialposition() const {
  return this != internal_default_instance() && initialposition_ != NULL;
}
void LoadUrdfCommand::clear_initialposition() {
  if (GetArenaNoVirtual() == NULL && initialposition_ != NULL) delete initialposition_;
  initialposition_ = NULL;
}
const ::pybullet_grpc::vec3& LoadUrdfCommand::initialposition() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.initialPosition)
  return initialposition_ != NULL ? *initialposition_
                         : *::pybullet_grpc::vec3::internal_default_instance();
}
::pybullet_grpc::vec3* LoadUrdfCommand::mutable_initialposition() {
  
  if (initialposition_ == NULL) {
    initialposition_ = new ::pybullet_grpc::vec3;
  }
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.LoadUrdfCommand.initialPosition)
  return initialposition_;
}
::pybullet_grpc::vec3* LoadUrdfCommand::release_initialposition() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.LoadUrdfCommand.initialPosition)
  
  ::pybullet_grpc::vec3* temp = initialposition_;
  initialposition_ = NULL;
  return temp;
}
void LoadUrdfCommand::set_allocated_initialposition(::pybullet_grpc::vec3* initialposition) {
  delete initialposition_;
  initialposition_ = initialposition;
  if (initialposition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.LoadUrdfCommand.initialPosition)
}

// .pybullet_grpc.quat4 initialOrientation = 3;
bool LoadUrdfCommand::has_initialorientation() const {
  return this != internal_default_instance() && initialorientation_ != NULL;
}
void LoadUrdfCommand::clear_initialorientation() {
  if (GetArenaNoVirtual() == NULL && initialorientation_ != NULL) delete initialorientation_;
  initialorientation_ = NULL;
}
const ::pybullet_grpc::quat4& LoadUrdfCommand::initialorientation() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.initialOrientation)
  return initialorientation_ != NULL ? *initialorientation_
                         : *::pybullet_grpc::quat4::internal_default_instance();
}
::pybullet_grpc::quat4* LoadUrdfCommand::mutable_initialorientation() {
  
  if (initialorientation_ == NULL) {
    initialorientation_ = new ::pybullet_grpc::quat4;
  }
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.LoadUrdfCommand.initialOrientation)
  return initialorientation_;
}
::pybullet_grpc::quat4* LoadUrdfCommand::release_initialorientation() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.LoadUrdfCommand.initialOrientation)
  
  ::pybullet_grpc::quat4* temp = initialorientation_;
  initialorientation_ = NULL;
  return temp;
}
void LoadUrdfCommand::set_allocated_initialorientation(::pybullet_grpc::quat4* initialorientation) {
  delete initialorientation_;
  initialorientation_ = initialorientation;
  if (initialorientation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.LoadUrdfCommand.initialOrientation)
}

// int32 useMultiBody = 4;
bool LoadUrdfCommand::has_usemultibody() const {
  return hasUseMultiBody_case() == kUseMultiBody;
}
void LoadUrdfCommand::set_has_usemultibody() {
  _oneof_case_[0] = kUseMultiBody;
}
void LoadUrdfCommand::clear_usemultibody() {
  if (has_usemultibody()) {
    hasUseMultiBody_.usemultibody_ = 0;
    clear_has_hasUseMultiBody();
  }
}
::google::protobuf::int32 LoadUrdfCommand::usemultibody() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.useMultiBody)
  if (has_usemultibody()) {
    return hasUseMultiBody_.usemultibody_;
  }
  return 0;
}
void LoadUrdfCommand::set_usemultibody(::google::protobuf::int32 value) {
  if (!has_usemultibody()) {
    clear_hasUseMultiBody();
    set_has_usemultibody();
  }
  hasUseMultiBody_.usemultibody_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.LoadUrdfCommand.useMultiBody)
}

// bool useFixedBase = 5;
bool LoadUrdfCommand::has_usefixedbase() const {
  return hasUseFixedBase_case() == kUseFixedBase;
}
void LoadUrdfCommand::set_has_usefixedbase() {
  _oneof_case_[1] = kUseFixedBase;
}
void LoadUrdfCommand::clear_usefixedbase() {
  if (has_usefixedbase()) {
    hasUseFixedBase_.usefixedbase_ = false;
    clear_has_hasUseFixedBase();
  }
}
bool LoadUrdfCommand::usefixedbase() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.useFixedBase)
  if (has_usefixedbase()) {
    return hasUseFixedBase_.usefixedbase_;
  }
  return false;
}
void LoadUrdfCommand::set_usefixedbase(bool value) {
  if (!has_usefixedbase()) {
    clear_hasUseFixedBase();
    set_has_usefixedbase();
  }
  hasUseFixedBase_.usefixedbase_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.LoadUrdfCommand.useFixedBase)
}

// int32 urdfFlags = 6;
void LoadUrdfCommand::clear_urdfflags() {
  urdfflags_ = 0;
}
::google::protobuf::int32 LoadUrdfCommand::urdfflags() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.urdfFlags)
  return urdfflags_;
}
void LoadUrdfCommand::set_urdfflags(::google::protobuf::int32 value) {
  
  urdfflags_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.LoadUrdfCommand.urdfFlags)
}

// double globalScaling = 7;
bool LoadUrdfCommand::has_globalscaling() const {
  return hasGlobalScaling_case() == kGlobalScaling;
}
void LoadUrdfCommand::set_has_globalscaling() {
  _oneof_case_[2] = kGlobalScaling;
}
void LoadUrdfCommand::clear_globalscaling() {
  if (has_globalscaling()) {
    hasGlobalScaling_.globalscaling_ = 0;
    clear_has_hasGlobalScaling();
  }
}
double LoadUrdfCommand::globalscaling() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfCommand.globalScaling)
  if (has_globalscaling()) {
    return hasGlobalScaling_.globalscaling_;
  }
  return 0;
}
void LoadUrdfCommand::set_globalscaling(double value) {
  if (!has_globalscaling()) {
    clear_hasGlobalScaling();
    set_has_globalscaling();
  }
  hasGlobalScaling_.globalscaling_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.LoadUrdfCommand.globalScaling)
}

bool LoadUrdfCommand::has_hasUseMultiBody() const {
  return hasUseMultiBody_case() != HASUSEMULTIBODY_NOT_SET;
}
void LoadUrdfCommand::clear_has_hasUseMultiBody() {
  _oneof_case_[0] = HASUSEMULTIBODY_NOT_SET;
}
bool LoadUrdfCommand::has_hasUseFixedBase() const {
  return hasUseFixedBase_case() != HASUSEFIXEDBASE_NOT_SET;
}
void LoadUrdfCommand::clear_has_hasUseFixedBase() {
  _oneof_case_[1] = HASUSEFIXEDBASE_NOT_SET;
}
bool LoadUrdfCommand::has_hasGlobalScaling() const {
  return hasGlobalScaling_case() != HASGLOBALSCALING_NOT_SET;
}
void LoadUrdfCommand::clear_has_hasGlobalScaling() {
  _oneof_case_[2] = HASGLOBALSCALING_NOT_SET;
}
LoadUrdfCommand::HasUseMultiBodyCase LoadUrdfCommand::hasUseMultiBody_case() const {
  return LoadUrdfCommand::HasUseMultiBodyCase(_oneof_case_[0]);
}
LoadUrdfCommand::HasUseFixedBaseCase LoadUrdfCommand::hasUseFixedBase_case() const {
  return LoadUrdfCommand::HasUseFixedBaseCase(_oneof_case_[1]);
}
LoadUrdfCommand::HasGlobalScalingCase LoadUrdfCommand::hasGlobalScaling_case() const {
  return LoadUrdfCommand::HasGlobalScalingCase(_oneof_case_[2]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadUrdfStatus::kObjectUniqueIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadUrdfStatus::LoadUrdfStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.LoadUrdfStatus)
}
LoadUrdfStatus::LoadUrdfStatus(const LoadUrdfStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objectuniqueid_ = from.objectuniqueid_;
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.LoadUrdfStatus)
}

void LoadUrdfStatus::SharedCtor() {
  objectuniqueid_ = 0;
  _cached_size_ = 0;
}

LoadUrdfStatus::~LoadUrdfStatus() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.LoadUrdfStatus)
  SharedDtor();
}

void LoadUrdfStatus::SharedDtor() {
}

void LoadUrdfStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadUrdfStatus::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[5].descriptor;
}

const LoadUrdfStatus& LoadUrdfStatus::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoadUrdfStatus* LoadUrdfStatus::New(::google::protobuf::Arena* arena) const {
  LoadUrdfStatus* n = new LoadUrdfStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadUrdfStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.LoadUrdfStatus)
  objectuniqueid_ = 0;
}

bool LoadUrdfStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.LoadUrdfStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 objectUniqueId = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objectuniqueid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.LoadUrdfStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.LoadUrdfStatus)
  return false;
#undef DO_
}

void LoadUrdfStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.LoadUrdfStatus)
  // int32 objectUniqueId = 1;
  if (this->objectuniqueid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->objectuniqueid(), output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.LoadUrdfStatus)
}

::google::protobuf::uint8* LoadUrdfStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.LoadUrdfStatus)
  // int32 objectUniqueId = 1;
  if (this->objectuniqueid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->objectuniqueid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.LoadUrdfStatus)
  return target;
}

size_t LoadUrdfStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.LoadUrdfStatus)
  size_t total_size = 0;

  // int32 objectUniqueId = 1;
  if (this->objectuniqueid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->objectuniqueid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoadUrdfStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.LoadUrdfStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadUrdfStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoadUrdfStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.LoadUrdfStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.LoadUrdfStatus)
    MergeFrom(*source);
  }
}

void LoadUrdfStatus::MergeFrom(const LoadUrdfStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.LoadUrdfStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.objectuniqueid() != 0) {
    set_objectuniqueid(from.objectuniqueid());
  }
}

void LoadUrdfStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.LoadUrdfStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadUrdfStatus::CopyFrom(const LoadUrdfStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.LoadUrdfStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadUrdfStatus::IsInitialized() const {
  return true;
}

void LoadUrdfStatus::Swap(LoadUrdfStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadUrdfStatus::InternalSwap(LoadUrdfStatus* other) {
  std::swap(objectuniqueid_, other->objectuniqueid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoadUrdfStatus::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadUrdfStatus

// int32 objectUniqueId = 1;
void LoadUrdfStatus::clear_objectuniqueid() {
  objectuniqueid_ = 0;
}
::google::protobuf::int32 LoadUrdfStatus::objectuniqueid() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.LoadUrdfStatus.objectUniqueId)
  return objectuniqueid_;
}
void LoadUrdfStatus::set_objectuniqueid(::google::protobuf::int32 value) {
  
  objectuniqueid_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.LoadUrdfStatus.objectUniqueId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PyBulletCommand::kCommandTypeFieldNumber;
const int PyBulletCommand::kLoadUrdfCommandFieldNumber;
const int PyBulletCommand::kTerminateServerCommandFieldNumber;
const int PyBulletCommand::kStepSimulationCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PyBulletCommand::PyBulletCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.PyBulletCommand)
}
PyBulletCommand::PyBulletCommand(const PyBulletCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commandtype_ = from.commandtype_;
  clear_has_commands();
  switch (from.commands_case()) {
    case kLoadUrdfCommand: {
      mutable_loadurdfcommand()->::pybullet_grpc::LoadUrdfCommand::MergeFrom(from.loadurdfcommand());
      break;
    }
    case kTerminateServerCommand: {
      mutable_terminateservercommand()->::pybullet_grpc::TerminateServerCommand::MergeFrom(from.terminateservercommand());
      break;
    }
    case kStepSimulationCommand: {
      mutable_stepsimulationcommand()->::pybullet_grpc::StepSimulationCommand::MergeFrom(from.stepsimulationcommand());
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.PyBulletCommand)
}

void PyBulletCommand::SharedCtor() {
  commandtype_ = 0;
  clear_has_commands();
  _cached_size_ = 0;
}

PyBulletCommand::~PyBulletCommand() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.PyBulletCommand)
  SharedDtor();
}

void PyBulletCommand::SharedDtor() {
  if (has_commands()) {
    clear_commands();
  }
}

void PyBulletCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PyBulletCommand::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[6].descriptor;
}

const PyBulletCommand& PyBulletCommand::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

PyBulletCommand* PyBulletCommand::New(::google::protobuf::Arena* arena) const {
  PyBulletCommand* n = new PyBulletCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PyBulletCommand::clear_commands() {
// @@protoc_insertion_point(one_of_clear_start:pybullet_grpc.PyBulletCommand)
  switch (commands_case()) {
    case kLoadUrdfCommand: {
      delete commands_.loadurdfcommand_;
      break;
    }
    case kTerminateServerCommand: {
      delete commands_.terminateservercommand_;
      break;
    }
    case kStepSimulationCommand: {
      delete commands_.stepsimulationcommand_;
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMMANDS_NOT_SET;
}


void PyBulletCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.PyBulletCommand)
  commandtype_ = 0;
  clear_commands();
}

bool PyBulletCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.PyBulletCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 commandType = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &commandtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pybullet_grpc.LoadUrdfCommand loadUrdfCommand = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loadurdfcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pybullet_grpc.TerminateServerCommand terminateServerCommand = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_terminateservercommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pybullet_grpc.StepSimulationCommand stepSimulationCommand = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stepsimulationcommand()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.PyBulletCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.PyBulletCommand)
  return false;
#undef DO_
}

void PyBulletCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.PyBulletCommand)
  // int32 commandType = 1;
  if (this->commandtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->commandtype(), output);
  }

  // .pybullet_grpc.LoadUrdfCommand loadUrdfCommand = 3;
  if (has_loadurdfcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *commands_.loadurdfcommand_, output);
  }

  // .pybullet_grpc.TerminateServerCommand terminateServerCommand = 4;
  if (has_terminateservercommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *commands_.terminateservercommand_, output);
  }

  // .pybullet_grpc.StepSimulationCommand stepSimulationCommand = 5;
  if (has_stepsimulationcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *commands_.stepsimulationcommand_, output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.PyBulletCommand)
}

::google::protobuf::uint8* PyBulletCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.PyBulletCommand)
  // int32 commandType = 1;
  if (this->commandtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->commandtype(), target);
  }

  // .pybullet_grpc.LoadUrdfCommand loadUrdfCommand = 3;
  if (has_loadurdfcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *commands_.loadurdfcommand_, false, target);
  }

  // .pybullet_grpc.TerminateServerCommand terminateServerCommand = 4;
  if (has_terminateservercommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *commands_.terminateservercommand_, false, target);
  }

  // .pybullet_grpc.StepSimulationCommand stepSimulationCommand = 5;
  if (has_stepsimulationcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *commands_.stepsimulationcommand_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.PyBulletCommand)
  return target;
}

size_t PyBulletCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.PyBulletCommand)
  size_t total_size = 0;

  // int32 commandType = 1;
  if (this->commandtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->commandtype());
  }

  switch (commands_case()) {
    // .pybullet_grpc.LoadUrdfCommand loadUrdfCommand = 3;
    case kLoadUrdfCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *commands_.loadurdfcommand_);
      break;
    }
    // .pybullet_grpc.TerminateServerCommand terminateServerCommand = 4;
    case kTerminateServerCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *commands_.terminateservercommand_);
      break;
    }
    // .pybullet_grpc.StepSimulationCommand stepSimulationCommand = 5;
    case kStepSimulationCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *commands_.stepsimulationcommand_);
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PyBulletCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.PyBulletCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const PyBulletCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PyBulletCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.PyBulletCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.PyBulletCommand)
    MergeFrom(*source);
  }
}

void PyBulletCommand::MergeFrom(const PyBulletCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.PyBulletCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.commandtype() != 0) {
    set_commandtype(from.commandtype());
  }
  switch (from.commands_case()) {
    case kLoadUrdfCommand: {
      mutable_loadurdfcommand()->::pybullet_grpc::LoadUrdfCommand::MergeFrom(from.loadurdfcommand());
      break;
    }
    case kTerminateServerCommand: {
      mutable_terminateservercommand()->::pybullet_grpc::TerminateServerCommand::MergeFrom(from.terminateservercommand());
      break;
    }
    case kStepSimulationCommand: {
      mutable_stepsimulationcommand()->::pybullet_grpc::StepSimulationCommand::MergeFrom(from.stepsimulationcommand());
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
}

void PyBulletCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.PyBulletCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PyBulletCommand::CopyFrom(const PyBulletCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.PyBulletCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PyBulletCommand::IsInitialized() const {
  return true;
}

void PyBulletCommand::Swap(PyBulletCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PyBulletCommand::InternalSwap(PyBulletCommand* other) {
  std::swap(commandtype_, other->commandtype_);
  std::swap(commands_, other->commands_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PyBulletCommand::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PyBulletCommand

// int32 commandType = 1;
void PyBulletCommand::clear_commandtype() {
  commandtype_ = 0;
}
::google::protobuf::int32 PyBulletCommand::commandtype() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.PyBulletCommand.commandType)
  return commandtype_;
}
void PyBulletCommand::set_commandtype(::google::protobuf::int32 value) {
  
  commandtype_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.PyBulletCommand.commandType)
}

// .pybullet_grpc.LoadUrdfCommand loadUrdfCommand = 3;
bool PyBulletCommand::has_loadurdfcommand() const {
  return commands_case() == kLoadUrdfCommand;
}
void PyBulletCommand::set_has_loadurdfcommand() {
  _oneof_case_[0] = kLoadUrdfCommand;
}
void PyBulletCommand::clear_loadurdfcommand() {
  if (has_loadurdfcommand()) {
    delete commands_.loadurdfcommand_;
    clear_has_commands();
  }
}
 const ::pybullet_grpc::LoadUrdfCommand& PyBulletCommand::loadurdfcommand() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.PyBulletCommand.loadUrdfCommand)
  return has_loadurdfcommand()
      ? *commands_.loadurdfcommand_
      : ::pybullet_grpc::LoadUrdfCommand::default_instance();
}
::pybullet_grpc::LoadUrdfCommand* PyBulletCommand::mutable_loadurdfcommand() {
  if (!has_loadurdfcommand()) {
    clear_commands();
    set_has_loadurdfcommand();
    commands_.loadurdfcommand_ = new ::pybullet_grpc::LoadUrdfCommand;
  }
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.PyBulletCommand.loadUrdfCommand)
  return commands_.loadurdfcommand_;
}
::pybullet_grpc::LoadUrdfCommand* PyBulletCommand::release_loadurdfcommand() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.PyBulletCommand.loadUrdfCommand)
  if (has_loadurdfcommand()) {
    clear_has_commands();
    ::pybullet_grpc::LoadUrdfCommand* temp = commands_.loadurdfcommand_;
    commands_.loadurdfcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void PyBulletCommand::set_allocated_loadurdfcommand(::pybullet_grpc::LoadUrdfCommand* loadurdfcommand) {
  clear_commands();
  if (loadurdfcommand) {
    set_has_loadurdfcommand();
    commands_.loadurdfcommand_ = loadurdfcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.PyBulletCommand.loadUrdfCommand)
}

// .pybullet_grpc.TerminateServerCommand terminateServerCommand = 4;
bool PyBulletCommand::has_terminateservercommand() const {
  return commands_case() == kTerminateServerCommand;
}
void PyBulletCommand::set_has_terminateservercommand() {
  _oneof_case_[0] = kTerminateServerCommand;
}
void PyBulletCommand::clear_terminateservercommand() {
  if (has_terminateservercommand()) {
    delete commands_.terminateservercommand_;
    clear_has_commands();
  }
}
 const ::pybullet_grpc::TerminateServerCommand& PyBulletCommand::terminateservercommand() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.PyBulletCommand.terminateServerCommand)
  return has_terminateservercommand()
      ? *commands_.terminateservercommand_
      : ::pybullet_grpc::TerminateServerCommand::default_instance();
}
::pybullet_grpc::TerminateServerCommand* PyBulletCommand::mutable_terminateservercommand() {
  if (!has_terminateservercommand()) {
    clear_commands();
    set_has_terminateservercommand();
    commands_.terminateservercommand_ = new ::pybullet_grpc::TerminateServerCommand;
  }
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.PyBulletCommand.terminateServerCommand)
  return commands_.terminateservercommand_;
}
::pybullet_grpc::TerminateServerCommand* PyBulletCommand::release_terminateservercommand() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.PyBulletCommand.terminateServerCommand)
  if (has_terminateservercommand()) {
    clear_has_commands();
    ::pybullet_grpc::TerminateServerCommand* temp = commands_.terminateservercommand_;
    commands_.terminateservercommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void PyBulletCommand::set_allocated_terminateservercommand(::pybullet_grpc::TerminateServerCommand* terminateservercommand) {
  clear_commands();
  if (terminateservercommand) {
    set_has_terminateservercommand();
    commands_.terminateservercommand_ = terminateservercommand;
  }
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.PyBulletCommand.terminateServerCommand)
}

// .pybullet_grpc.StepSimulationCommand stepSimulationCommand = 5;
bool PyBulletCommand::has_stepsimulationcommand() const {
  return commands_case() == kStepSimulationCommand;
}
void PyBulletCommand::set_has_stepsimulationcommand() {
  _oneof_case_[0] = kStepSimulationCommand;
}
void PyBulletCommand::clear_stepsimulationcommand() {
  if (has_stepsimulationcommand()) {
    delete commands_.stepsimulationcommand_;
    clear_has_commands();
  }
}
 const ::pybullet_grpc::StepSimulationCommand& PyBulletCommand::stepsimulationcommand() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.PyBulletCommand.stepSimulationCommand)
  return has_stepsimulationcommand()
      ? *commands_.stepsimulationcommand_
      : ::pybullet_grpc::StepSimulationCommand::default_instance();
}
::pybullet_grpc::StepSimulationCommand* PyBulletCommand::mutable_stepsimulationcommand() {
  if (!has_stepsimulationcommand()) {
    clear_commands();
    set_has_stepsimulationcommand();
    commands_.stepsimulationcommand_ = new ::pybullet_grpc::StepSimulationCommand;
  }
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.PyBulletCommand.stepSimulationCommand)
  return commands_.stepsimulationcommand_;
}
::pybullet_grpc::StepSimulationCommand* PyBulletCommand::release_stepsimulationcommand() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.PyBulletCommand.stepSimulationCommand)
  if (has_stepsimulationcommand()) {
    clear_has_commands();
    ::pybullet_grpc::StepSimulationCommand* temp = commands_.stepsimulationcommand_;
    commands_.stepsimulationcommand_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void PyBulletCommand::set_allocated_stepsimulationcommand(::pybullet_grpc::StepSimulationCommand* stepsimulationcommand) {
  clear_commands();
  if (stepsimulationcommand) {
    set_has_stepsimulationcommand();
    commands_.stepsimulationcommand_ = stepsimulationcommand;
  }
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.PyBulletCommand.stepSimulationCommand)
}

bool PyBulletCommand::has_commands() const {
  return commands_case() != COMMANDS_NOT_SET;
}
void PyBulletCommand::clear_has_commands() {
  _oneof_case_[0] = COMMANDS_NOT_SET;
}
PyBulletCommand::CommandsCase PyBulletCommand::commands_case() const {
  return PyBulletCommand::CommandsCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PyBulletStatus::kStatusTypeFieldNumber;
const int PyBulletStatus::kUrdfStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PyBulletStatus::PyBulletStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pybullet_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pybullet_grpc.PyBulletStatus)
}
PyBulletStatus::PyBulletStatus(const PyBulletStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  statustype_ = from.statustype_;
  clear_has_status();
  switch (from.status_case()) {
    case kUrdfStatus: {
      mutable_urdfstatus()->::pybullet_grpc::LoadUrdfStatus::MergeFrom(from.urdfstatus());
      break;
    }
    case STATUS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pybullet_grpc.PyBulletStatus)
}

void PyBulletStatus::SharedCtor() {
  statustype_ = 0;
  clear_has_status();
  _cached_size_ = 0;
}

PyBulletStatus::~PyBulletStatus() {
  // @@protoc_insertion_point(destructor:pybullet_grpc.PyBulletStatus)
  SharedDtor();
}

void PyBulletStatus::SharedDtor() {
  if (has_status()) {
    clear_status();
  }
}

void PyBulletStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PyBulletStatus::descriptor() {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[7].descriptor;
}

const PyBulletStatus& PyBulletStatus::default_instance() {
  protobuf_pybullet_2eproto::InitDefaults();
  return *internal_default_instance();
}

PyBulletStatus* PyBulletStatus::New(::google::protobuf::Arena* arena) const {
  PyBulletStatus* n = new PyBulletStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PyBulletStatus::clear_status() {
// @@protoc_insertion_point(one_of_clear_start:pybullet_grpc.PyBulletStatus)
  switch (status_case()) {
    case kUrdfStatus: {
      delete status_.urdfstatus_;
      break;
    }
    case STATUS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STATUS_NOT_SET;
}


void PyBulletStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:pybullet_grpc.PyBulletStatus)
  statustype_ = 0;
  clear_status();
}

bool PyBulletStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pybullet_grpc.PyBulletStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 statusType = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statustype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pybullet_grpc.LoadUrdfStatus urdfStatus = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_urdfstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pybullet_grpc.PyBulletStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pybullet_grpc.PyBulletStatus)
  return false;
#undef DO_
}

void PyBulletStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pybullet_grpc.PyBulletStatus)
  // int32 statusType = 1;
  if (this->statustype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->statustype(), output);
  }

  // .pybullet_grpc.LoadUrdfStatus urdfStatus = 2;
  if (has_urdfstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *status_.urdfstatus_, output);
  }

  // @@protoc_insertion_point(serialize_end:pybullet_grpc.PyBulletStatus)
}

::google::protobuf::uint8* PyBulletStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pybullet_grpc.PyBulletStatus)
  // int32 statusType = 1;
  if (this->statustype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->statustype(), target);
  }

  // .pybullet_grpc.LoadUrdfStatus urdfStatus = 2;
  if (has_urdfstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *status_.urdfstatus_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pybullet_grpc.PyBulletStatus)
  return target;
}

size_t PyBulletStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pybullet_grpc.PyBulletStatus)
  size_t total_size = 0;

  // int32 statusType = 1;
  if (this->statustype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->statustype());
  }

  switch (status_case()) {
    // .pybullet_grpc.LoadUrdfStatus urdfStatus = 2;
    case kUrdfStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *status_.urdfstatus_);
      break;
    }
    case STATUS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PyBulletStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pybullet_grpc.PyBulletStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PyBulletStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PyBulletStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pybullet_grpc.PyBulletStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pybullet_grpc.PyBulletStatus)
    MergeFrom(*source);
  }
}

void PyBulletStatus::MergeFrom(const PyBulletStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pybullet_grpc.PyBulletStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.statustype() != 0) {
    set_statustype(from.statustype());
  }
  switch (from.status_case()) {
    case kUrdfStatus: {
      mutable_urdfstatus()->::pybullet_grpc::LoadUrdfStatus::MergeFrom(from.urdfstatus());
      break;
    }
    case STATUS_NOT_SET: {
      break;
    }
  }
}

void PyBulletStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pybullet_grpc.PyBulletStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PyBulletStatus::CopyFrom(const PyBulletStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pybullet_grpc.PyBulletStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PyBulletStatus::IsInitialized() const {
  return true;
}

void PyBulletStatus::Swap(PyBulletStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PyBulletStatus::InternalSwap(PyBulletStatus* other) {
  std::swap(statustype_, other->statustype_);
  std::swap(status_, other->status_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PyBulletStatus::GetMetadata() const {
  protobuf_pybullet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pybullet_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PyBulletStatus

// int32 statusType = 1;
void PyBulletStatus::clear_statustype() {
  statustype_ = 0;
}
::google::protobuf::int32 PyBulletStatus::statustype() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.PyBulletStatus.statusType)
  return statustype_;
}
void PyBulletStatus::set_statustype(::google::protobuf::int32 value) {
  
  statustype_ = value;
  // @@protoc_insertion_point(field_set:pybullet_grpc.PyBulletStatus.statusType)
}

// .pybullet_grpc.LoadUrdfStatus urdfStatus = 2;
bool PyBulletStatus::has_urdfstatus() const {
  return status_case() == kUrdfStatus;
}
void PyBulletStatus::set_has_urdfstatus() {
  _oneof_case_[0] = kUrdfStatus;
}
void PyBulletStatus::clear_urdfstatus() {
  if (has_urdfstatus()) {
    delete status_.urdfstatus_;
    clear_has_status();
  }
}
 const ::pybullet_grpc::LoadUrdfStatus& PyBulletStatus::urdfstatus() const {
  // @@protoc_insertion_point(field_get:pybullet_grpc.PyBulletStatus.urdfStatus)
  return has_urdfstatus()
      ? *status_.urdfstatus_
      : ::pybullet_grpc::LoadUrdfStatus::default_instance();
}
::pybullet_grpc::LoadUrdfStatus* PyBulletStatus::mutable_urdfstatus() {
  if (!has_urdfstatus()) {
    clear_status();
    set_has_urdfstatus();
    status_.urdfstatus_ = new ::pybullet_grpc::LoadUrdfStatus;
  }
  // @@protoc_insertion_point(field_mutable:pybullet_grpc.PyBulletStatus.urdfStatus)
  return status_.urdfstatus_;
}
::pybullet_grpc::LoadUrdfStatus* PyBulletStatus::release_urdfstatus() {
  // @@protoc_insertion_point(field_release:pybullet_grpc.PyBulletStatus.urdfStatus)
  if (has_urdfstatus()) {
    clear_has_status();
    ::pybullet_grpc::LoadUrdfStatus* temp = status_.urdfstatus_;
    status_.urdfstatus_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void PyBulletStatus::set_allocated_urdfstatus(::pybullet_grpc::LoadUrdfStatus* urdfstatus) {
  clear_status();
  if (urdfstatus) {
    set_has_urdfstatus();
    status_.urdfstatus_ = urdfstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:pybullet_grpc.PyBulletStatus.urdfStatus)
}

bool PyBulletStatus::has_status() const {
  return status_case() != STATUS_NOT_SET;
}
void PyBulletStatus::clear_has_status() {
  _oneof_case_[0] = STATUS_NOT_SET;
}
PyBulletStatus::StatusCase PyBulletStatus::status_case() const {
  return PyBulletStatus::StatusCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pybullet_grpc

// @@protoc_insertion_point(global_scope)
